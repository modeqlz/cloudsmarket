import { useEffect, useState } from 'react';
import Head from 'next/head';
import LoadingCard from '../components/LoadingCard';

// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –æ–≤–µ—Ä–ª–µ—è ~0.9s
const minDelay = async (p, ms = 900) =>
  Promise.all([p, new Promise(r => setTimeout(r, ms))]).then(([res]) => res);

export default function IndexPage() {
  const [insideTelegram, setInsideTelegram] = useState(false);
  const [busy, setBusy] = useState(false);
  const [error, setError] = useState(null);

  // üëâ –ê–≤—Ç–æ–≤—Ö–æ–¥: –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—Å—Ç—å –ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–∏–º–∞–ª ¬´–í—ã–π—Ç–∏¬ª ‚Äî —É–≤–æ–¥–∏–º –≤ /home
  useEffect(() => {
    try {
      const stored = localStorage.getItem('profile');
      const loggedOut = sessionStorage.getItem('logged_out') === '1';
      if (stored && !loggedOut) {
        window.location.replace('/home');
        return;
      }
    } catch {}
  }, []);

  useEffect(() => {
    const tg = typeof window !== 'undefined' ? window.Telegram?.WebApp : null;
    if (tg) { setInsideTelegram(true); tg.ready(); tg.expand(); }
  }, []);

  // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –ø–æ–¥ –º–æ–¥–∞–ª–∫–æ–π, –∫–æ–≥–¥–∞ busy=true
  useEffect(() => {
    if (!busy) return;
    const prev = document.body.style.overflow;
    document.body.style.overflow = 'hidden';
    return () => { document.body.style.overflow = prev; };
  }, [busy]);

  async function handleContinue() {
    setError(null);
    setBusy(true);
    try {
      const tg = window.Telegram?.WebApp;
      if (!tg) { setError('–û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–∞–ø–∫—É –∏–∑ Telegram (–∫–Ω–æ–ø–∫–∞ ¬´–û—Ç–∫—Ä—ã—Ç—å¬ª –≤ —á–∞—Ç–µ –±–æ—Ç–∞).'); return; }

      const initData = tg.initData || '';
      if (!initData) { setError('Telegram –Ω–µ –ø–µ—Ä–µ–¥–∞–ª initData. –ù–∞–∂–º–∏ ‚ãØ ‚Üí ¬´–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É¬ª.'); return; }

      const res = await minDelay(
        fetch('/api/auth/telegram', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ initData })
        }).then(r => r.json())
      );

      if (res.ok) {
        // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–¥–æ–ª–≥–æ –∏ —Å–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ ¬´–≤—ã—à–µ–ª¬ª
        localStorage.setItem('profile', JSON.stringify(res.profile || null));
        sessionStorage.removeItem('logged_out');
        window.location.href = '/home'; // ‚¨ÖÔ∏è —Ç–µ–ø–µ—Ä—å –≤–µ–¥—ë–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      } else {
        setError(res.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É Telegram.');
      }
    } catch {
      setError('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.');
    } finally {
      setBusy(false);
    }
  }

  return (
    <>
      <Head><title>CloudsMarket ‚Äî –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram</title></Head>
      <div className="container">
        <div className="hero">
          <div className="brand">
            <img src="/plane.svg" alt="" width="18" height="18" />
            <span>CloudsMarket</span>
          </div>

          <h1 className="h1">–ó–∞—Ö–æ–¥–∏ —á–µ—Ä–µ–∑ Telegram</h1>
          <p className="lead">
            –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±–µ–∑ –ø–∞—Ä–æ–ª–µ–π. –ú—ã –ø–æ–ª—É—á–∏–º —Ç–æ–ª—å–∫–æ —Ç–≤–æ–∏ –ø—É–±–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram
            (–∏–º—è, —é–∑–µ—Ä–Ω–µ–π–º, –∞–≤–∞—Ç–∞—Ä) ‚Äî –∏ —Å–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ—Ñ–∏–ª—å.
          </p>

          <div className="row">
            <button className="btn btn-primary" onClick={handleContinue} disabled={busy}>
              <img src="/plane.svg" alt="" width="18" height="18" />
              {busy ? '–ü—Ä–æ–≤–µ—Ä—è–µ–º‚Ä¶' : 'Continue'}
            </button>

            <a className="btn btn-ghost" href="https://t.me/" target="_blank" rel="noreferrer">
              Join our Telegram Community
            </a>
          </div>

          <div className="foot">
            –ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å{' '}
            <a href="#" onClick={(e)=>e.preventDefault()}>–ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a> –∏{' '}
            <a href="#" onClick={(e)=>e.preventDefault()}>–£—Å–ª–æ–≤–∏—è–º–∏ —Å–µ—Ä–≤–∏—Å–∞</a>.
          </div>

          {error && <div className="foot" style={{ color: '#ffb4b4' }}>–û—à–∏–±–∫–∞: {error}</div>}
        </div>
      </div>

      {/* –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π —Å –±–ª—é—Ä–æ–º –∏ –±—ã—Å—Ç—Ä—ã–º —Ü–∏–∫–ª–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π */}
      {busy && (
        <div className="overlay" aria-hidden>
          <div className="overlay-backdrop" />
          <div className="overlay-panel">
            <LoadingCard
              messages={[
                '–°—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ Telegram‚Ä¶',
                '–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å WebApp‚Ä¶',
                '–°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Ñ–∏–ª—å‚Ä¶',
                '–ü–æ–¥–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä‚Ä¶'
              ]}
              intervalMs={600}
            />
            <div className="overlay-hint">–≠—Ç–æ –∑–∞–π–º—ë—Ç –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥‚Ä¶</div>
          </div>
        </div>
      )}
    </>
  );
}